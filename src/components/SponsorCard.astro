---
interface Props {
    url: string,
    image: {
        logo: any
        width: number
        height: number
    },
    name: string,
    label: string
}

const {url, image, name, label} = Astro.props
---

<div class="flex justify-center items-cente w-1/2 lg:w-1/3 p-2 transition-all ease-in-out">
    <a
      href={url}
      target="_blank"
      data-name={name}
      aria-label={label ?? name}
      class="relative size-20 h-28 w-full transition flex justify-center items-center rounded-2xl shadow-md shadow-theme-french-mauve group sponsor-link"
       style="--bg-position-x: 50%; --bg-position-y: 50%;"
    >
    <div class="absolute inset-0 rounded-2xl bg-radial from-theme-french-mauve from-30% to-theme-turquoise to-100% bg-[length:200%_200%] bg-no-repeat transition-all duration-100 sponsor-div" style="background-position-x: var(--bg-position-x); background-position-y: var(--bg-position-y);"/>
      <image.logo width={image.width} height={image.width} class="h-20 group-hover:scale-125 transition w-auto z-10" />
    </a>
</div>

<script>
  document.addEventListener("astro:page-load", () => {
  const sponsorLinks : NodeListOf<HTMLAnchorElement> = document.querySelectorAll('.sponsor-link');
 
  sponsorLinks.forEach(sponsor => { 
    let timeoutId: number | undefined;
    sponsor.addEventListener('mousemove', (event) => {
      const { clientX: x, clientY: y } = event as MouseEvent;
      const rect = sponsor.getBoundingClientRect();
      const rx = x - rect.left;
      const ry = y - rect.top;

      const xPercent = Math.floor((rx / rect.width) * 100);
      const yPercent = Math.floor((ry / rect.height) * 100);

      sponsor.style.setProperty('--bg-position-x', `${100 - xPercent}%`);
      sponsor.style.setProperty('--bg-position-y', `${100 - yPercent}%`);

      console.log(xPercent, yPercent)
    
    });
    
    sponsor.addEventListener('mouseenter', () => {
      clearTimeout(timeoutId);
      const bgDiv = sponsor.querySelector('.sponsor-div');
      if (bgDiv) {
        bgDiv.classList.remove('duration-1000');
        bgDiv.classList.add('duration-100');
      }
    });
    
    sponsor.addEventListener('mouseleave', () => {
      timeoutId = setTimeout(() => {
        sponsor.style.setProperty('--bg-position-x', '50%');
        sponsor.style.setProperty('--bg-position-y', '50%');
        const bgDiv = sponsor.querySelector('.sponsor-div');
        if (bgDiv) {
          bgDiv.classList.remove('duration-100');
          bgDiv.classList.add('duration-1000');
        }
      }, 100);
      })
    })
  });
</script>